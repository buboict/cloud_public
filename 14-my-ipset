#!/bin/sh

# This file is based on 15-ip4tables
#
# ipset restore -!  =
# Ignore errors when creating or adding sets or
#        elements that do exist or when deleting elements
#        that don't exist.
#

set -e

rc=0

load_rules()
{
	#load ipset
	if [ ! -f /etc/ipset/current.ipset ]; then
		echo "Warning: skipping current ipset (no set to load)"
	else
		ipset restore -! < /etc/ipset/current.ipset 2> /dev/null
		if [ $? -ne 0 ]; then
			rc=1
		fi
	fi
}

save_rules()
{
	#save ipset
        if ! ipset list | grep -i "name">/dev/null 2>&1; then
		echo "Warning: skipping ipset (no set loaded)"
	else
		ipset save > /etc/ipset/current.ipset
		if [ $? -ne 0 ]; then
			rc=1
		fi
	fi
}

flush_rules()
{
	#flush ipset
        if ! ipset list | grep -i "name">/dev/null 2>&1; then
                echo "Warning: skipping ipset (no set loaded)"
        else
                ipset flush
        fi
}

case "$1" in
start|restart|reload|force-reload)
	load_rules
	;;
save)
	save_rules
	;;
stop)
	# Why? because if stop is used, the firewall gets flushed for a variable
	# amount of time during package upgrades, leaving the machine vulnerable
	# It's also not always desirable to flush during purge
	echo "Automatic flushing disabled, use \"flush\" instead of \"stop\""
	;;
flush)
	flush_rules
	;;
*)
    echo "Usage: $0 {start|restart|reload|force-reload|save|flush}" >&2
    exit 1
    ;;
esac

exit $rc
